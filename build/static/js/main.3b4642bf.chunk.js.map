{"version":3,"sources":["pages/Repositories/styled.js","pages/Repositories/Repositories.js","pages/Home/styled.js","pages/Home/Home.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","h1","List","ul","ListItem","li","LinkHome","Link","Repositories","history","useHistory","useState","repositories","setRepositories","useEffect","repositoriesName","localStorage","getItem","JSON","parse","clear","push","map","repository","to","HomeContainer","Content","Input","input","Button","button","ErrorMsg","span","Home","props","usuario","setUsuario","erro","setErro","className","placeholder","value","onChange","e","target","type","onClick","axios","get","then","response","data","name","setItem","stringify","catch","err","Routes","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGaA,EAAYC,IAAOC,IAAV,kFAMTC,EAAQF,IAAOG,GAAV,mHAOLC,EAAOJ,IAAOK,GAAV,0GAOJC,EAAWN,IAAOO,GAAV,0GAMRC,EAAWR,YAAOS,IAAPT,CAAH,yS,OCzBN,SAASU,IACtB,IAAMC,EAAUC,cAChB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAaA,OAXAC,qBAAU,WACR,IAAIC,EAAmBC,aAAaC,QAAQ,oBACpB,MAApBF,GACFA,EAAmBG,KAAKC,MAAMJ,GAC9BF,EAAgBE,GAChBC,aAAaI,SAEbX,EAAQY,KAAK,OAEd,IAGD,eAAC,EAAD,WACE,cAAC,EAAD,6BACA,cAAC,EAAD,UACGT,EAAaU,KAAI,SAAAC,GAChB,OAAO,eAAC,EAAD,+BAA2BA,EAA3B,YAGX,cAAC,EAAD,CAAYC,GAAG,IAAf,yB,+BCzBOC,EAAgB3B,IAAOC,IAAV,+IAQb2B,EAAU5B,IAAOC,IAAV,mHAOP4B,EAAQ7B,IAAO8B,MAAV,4MAYLC,EAAS/B,IAAOgC,OAAV,8QAiBNC,EAAWjC,IAAOkC,KAAV,+HCKNC,MA9Cf,SAAcC,GACZ,IAAMzB,EAAUC,cAChB,EAA8BC,mBAAS,IAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACA,EAAwBzB,oBAAS,GAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KAwBA,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEC,UAAU,eACVC,YAAY,UACZC,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAWO,EAAEC,OAAOH,UAErC,eAAC,EAAD,CAAUI,KAAK,SAASC,QA/B9B,WACEC,IACGC,IADH,uCACuCb,EADvC,WAEGc,MAAK,SAAAC,GACJ,IAAMtC,EAAesC,EAASC,KACxBpC,EAAmB,GAEzBH,EAAaU,KAAI,SAAAC,GACfR,EAAiBM,KAAKE,EAAW6B,SAEnCpC,aAAaqC,QACX,mBACAnC,KAAKoC,UAAUvC,IAEjBuB,GAAQ,GACR7B,EAAQY,KAAK,oBAEdkC,OAAM,SAAAC,GACLlB,GAAQ,OAaR,UACG,IADH,YAEY,UAGbD,EAAO,cAAC,EAAD,iDAA8D,OCxC7D,SAASoB,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3B,IACjC,cAAC,IAAD,CAAOyB,KAAK,gBAAgBE,UAAWpD,S,MCFhCqD,MAJf,WACE,OAAO,cAACJ,EAAD,KCMMK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3b4642bf.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 991px;\r\n  margin 0 auto\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-family: sans-serif;\r\n  color: #333;\r\n`\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: sans-serif;\r\n`\r\n\r\nexport const ListItem = styled.li`\r\n  margin: 0.5rem 0;\r\n  background: #000;\r\n  color: #fff;\r\n  padding: 0.5rem;\r\n`\r\nexport const LinkHome = styled(Link)`\r\n  border: 1px solid #000;\r\n  background: #000;\r\n  color: #fff;\r\n  border-radius: 0.25rem;\r\n  margin: 0.1rem auto;\r\n  display: block;\r\n  width: 7.2rem;\r\n  padding: 0.8rem 0;\r\n  text-align: center;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background: #ff4700;\r\n  }\r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport * as S from './styled'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Repositories() {\r\n  const history = useHistory()\r\n  const [repositories, setRepositories] = useState([])\r\n\r\n  useEffect(() => {\r\n    let repositoriesName = localStorage.getItem('repositoriesName')\r\n    if (repositoriesName != null) {\r\n      repositoriesName = JSON.parse(repositoriesName)\r\n      setRepositories(repositoriesName)\r\n      localStorage.clear()\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Title>Repositório</S.Title>\r\n      <S.List>\r\n        {repositories.map(repository => {\r\n          return <S.ListItem> Repositório: {repository} </S.ListItem>\r\n        })}\r\n      </S.List>\r\n      <S.LinkHome to=\"/\"> Voltar </S.LinkHome>\r\n    </S.Container>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid #ddd;\r\n  border-radius: 0.25rem 0 0 0.25rem;\r\n  padding: 1rem 7rem 1rem 1rem;\r\n\r\n  &:focus,\r\n  &:active {\r\n    outiline: none;\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  border: 1px solid #000;\r\n  background: #000;\r\n  color: #fff;\r\n  border-radius: 0 0.25rem 0.25rem 0;\r\n  padding: 1rem;\r\n\r\n  &:hover {\r\n    background: #ff4700;\r\n  }\r\n  &:focus,\r\n  &:active {\r\n    outiline: none;\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nexport const ErrorMsg = styled.span`\r\n  display: block;\r\n  font-size: 0.65rem;\r\n  color: red;\r\n  font-weight: 600;\r\n  margin-top: 1rem;\r\n`\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport * as S from './styled'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Home(props) {\r\n  const history = useHistory()\r\n  const [usuario, setUsuario] = useState('')\r\n  const [erro, setErro] = useState(false)\r\n\r\n  function handlePesquisa() {\r\n    axios\r\n      .get(`https://api.github.com/users/${usuario}/repos`)\r\n      .then(response => {\r\n        const repositories = response.data\r\n        const repositoriesName = []\r\n\r\n        repositories.map(repository => {\r\n          repositoriesName.push(repository.name)\r\n        })\r\n        localStorage.setItem(\r\n          'repositoriesName',\r\n          JSON.stringify(repositoriesName)\r\n        )\r\n        setErro(false)\r\n        history.push('/repositories')\r\n      })\r\n      .catch(err => {\r\n        setErro(true)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <S.HomeContainer>\r\n      <S.Content>\r\n        <S.Input\r\n          className=\"usuarioInput\"\r\n          placeholder=\"usuario\"\r\n          value={usuario}\r\n          onChange={e => setUsuario(e.target.value)}\r\n        />\r\n        <S.Button type=\"button\" onClick={handlePesquisa}>\r\n          {' '}\r\n          Pesquisar{' '}\r\n        </S.Button>\r\n      </S.Content>\r\n      {erro ? <S.ErrorMsg>Ocorreu um erro. Tente novamente. </S.ErrorMsg> : ''}\r\n    </S.HomeContainer>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport Repositories from './pages/Repositories/Repositories'\r\nimport Home from './pages/Home/Home'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/repositories\" component={Repositories} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Routes from './routes'\r\n\r\nimport './styled.css'\r\n\r\nfunction App() {\r\n  return <Routes />\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}